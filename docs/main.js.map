{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project-sky';\n}\n","<app-login></app-login>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n\n  @ViewChild('loginBox', { static: false })\n  loginBox!: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  login(){\n    alert(\"Login button has been clicked!!\")\n  }\n\n  rotateCard(){\n    this.loginBox.nativeElement.classList.toggle('hover');\n  }\n}\n","<!-- <p>login works!</p> -->\n\n<div class=\"stars-bg\">\n    <div id=\"stars\"></div>\n    <div id=\"stars2\"></div>\n    <div id=\"stars3\"></div>\n</div>\n<div class=\"body-container\">\n\n    <div class=\"login-box\" #loginBox>\n        <div class=\"login-content\">\n            <h2 class=\"login-header\">Sign in</h2>\n            <form action=\"\">\n                <div class=\"inputBox\">\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n                </div>\n                <div class=\"inputBox\">\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n                </div>\n                <!-- <div class=\"inputBox\">\n                    <input type=\"submit\" value=\"Login\">\n                </div> -->\n                <button class=\"btn-login\">\n                    Sign in\n                </button>\n                <p class=\"forget\">Forgot password ? <a href=\"#\">Click here</a></p>\n                <p class=\"forget\">Don't have an account ? <a href=\"#\" (click)=\"rotateCard()\">Sign up</a></p>\n            </form>\n        </div>\n\n        <div class=\"signup-content\">\n            <div class=\"\">\n                <h2 class=\"signup-header\">Sign up</h2>\n                <form action=\"\">\n                    <div class=\"inputBox\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\">\n                    </div>\n                    <div class=\"inputBox\">\n                        <input type=\"email\" name=\"email\" placeholder=\"E-mail\">\n                    </div>\n                    <div class=\"inputBox\">\n                        <input type=\"number\" name=\"phone\" placeholder=\"Contact no.\">\n                    </div>\n                    <button class=\"btn-signup\">\n                        Continue\n                    </button>\n                    <p class=\"return-to-signin\">Already have an account ?<a href=\"#\" (click)=\"rotateCard()\">Click here</a></p>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}